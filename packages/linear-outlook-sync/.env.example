# Linear Outlook Sync Configuration
# 
# This file contains all the environment variables needed to configure the Linear Outlook Sync service.
# Copy this file to .env and fill in your actual values.

# =============================================================================
# LINEAR CONFIGURATION
# =============================================================================

# Linear API Key
# Get this from your Linear settings: https://linear.app/settings/api
# Required permissions: Read teams, Create/Update triage responsibilities
LINEAR.AUTH.API_KEY=your_linear_api_key_here

# Linear Team ID
# The UUID of the Linear team where triage responsibilities should be managed
# You can find this in the Linear URL when viewing your team
LINEAR.TEAM_ID=your_linear_team_id_here

# Linear User Mappings
# Map calendar usernames to Linear user IDs (UUIDs)
# Format: LINEAR.USERS_{USERNAME}={LINEAR_USER_ID}
# These map the usernames found in calendar events to Linear user IDs
# 
# Example mappings:
LINEAR.USERS_john=550e8400-e29b-41d4-a716-446655440000
LINEAR.USERS_sarah=660e8400-e29b-41d4-a716-446655440001
LINEAR.USERS_mike=770e8400-e29b-41d4-a716-446655440002
LINEAR.USERS_alex=880e8400-e29b-41d4-a716-446655440003
LINEAR.USERS_emma=990e8400-e29b-41d4-a716-446655440004

# =============================================================================
# OUTLOOK CONFIGURATION
# =============================================================================

# Outlook Calendar Email
# The email address of the Outlook calendar to monitor for events
OUTLOOK.CALENDAR_EMAIL=your_calendar@company.com

# Event Regex Pattern
# Regular expression to match calendar events that should trigger triage assignments
# The service looks for events with subjects like: "(username) [regex] (more text)"
# 
# Examples:
# - "hotline" matches events like "John hotline duty", "hotline Mike coverage"
# - "hotline|support" matches both hotline and support events
# - "on-call|hotline|support" matches multiple types of duty events
OUTLOOK.EVENT_REGEX=hotline

# =============================================================================
# AZURE AD AUTHENTICATION
# =============================================================================

# Azure AD Tenant ID
# The tenant ID of your Azure Active Directory
# Found in Azure Portal > Azure Active Directory > Properties > Tenant ID
OUTLOOK.AUTH.TENANT_ID=your_azure_tenant_id_here

# Azure AD Application Client ID
# The application (client) ID of your registered Azure AD app
# Found in Azure Portal > App registrations > Your App > Application (client) ID
OUTLOOK.AUTH.CLIENT_ID=your_azure_client_id_here

# Azure AD Application Client Secret
# The client secret value for your Azure AD application
# Created in Azure Portal > App registrations > Your App > Certificates & secrets
# Note: Keep this value secure and never commit it to version control
OUTLOOK.AUTH.CLIENT_SECRET=your_azure_client_secret_here

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. Azure AD Setup:
#    - Register an application in Azure Portal
#    - Grant "Calendars.Read" application permission
#    - Create a client secret
#    - Note down tenant ID, client ID, and client secret
#
# 2. Linear Setup:
#    - Generate API key from Linear settings
#    - Find your team ID from the Linear team URL
#    - Get user IDs for team members (can be found in Linear user profiles)
#
# 3. Calendar Events:
#    - Ensure calendar events follow the format: "{username} {regex_pattern} {optional_text}"
#    - Examples: "John hotline duty", "Support Sarah today", "Mike on-call rotation"
#
# 4. Testing:
#    - Run the service to verify it can authenticate and read calendar events
#    - Check that user mappings correctly match calendar usernames to Linear users